# Generated by `./etc/examples/generators/syntax.rb %Q > etc/examples/syntax/Q.rb`

  %~
    foo
    \~
    \\\~
    bar
  ~


  %`
    foo
    \`
    \\\`
    bar
  `


  %!
    foo
    \!
    \\\!
    bar
  !


  %@
    foo
    \@
    \\\@
    bar
  @


  %#
    foo
    \#
    \\\#
    bar
  #


  %$
    foo
    \$
    \\\$
    bar
  $


  %%
    foo
    \%
    \\\%
    bar
  %


  %^
    foo
    \^
    \\\^
    bar
  ^


  %&
    foo
    \&
    \\\&
    bar
  &


  %*
    foo
    \*
    \\\*
    bar
  *


  %_
    foo
    \_
    \\\_
    bar
  _


  %-
    foo
    \-
    \\\-
    bar
  -


  %+
    foo
    \+
    \\\+
    bar
  +


  %|
    foo
    \|
    \\\|
    bar
  |


  %:
    foo
    \:
    \\\:
    bar
  :


  %;
    foo
    \;
    \\\;
    bar
  ;


  %"
    foo
    \"
    \\\"
    bar
  "


  %'
    foo
    \'
    \\\'
    bar
  '


  %,
    foo
    \,
    \\\,
    bar
  ,


  %.
    foo
    \.
    \\\.
    bar
  .


  %?
    foo
    \?
    \\\?
    bar
  ?


  %/
    foo
    \/
    \\\/
    bar
  /


  %Q~
    foo
    \~
    \\\~
    bar
  ~


  %Q`
    foo
    \`
    \\\`
    bar
  `


  %Q!
    foo
    \!
    \\\!
    bar
  !


  %Q@
    foo
    \@
    \\\@
    bar
  @


  %Q#
    foo
    \#
    \\\#
    bar
  #


  %Q$
    foo
    \$
    \\\$
    bar
  $


  %Q%
    foo
    \%
    \\\%
    bar
  %


  %Q^
    foo
    \^
    \\\^
    bar
  ^


  %Q&
    foo
    \&
    \\\&
    bar
  &


  %Q*
    foo
    \*
    \\\*
    bar
  *


  %Q_
    foo
    \_
    \\\_
    bar
  _


  %Q-
    foo
    \-
    \\\-
    bar
  -


  %Q+
    foo
    \+
    \\\+
    bar
  +


  %Q=
    foo
    \=
    \\\=
    bar
  =


  %Q|
    foo
    \|
    \\\|
    bar
  |


  %Q:
    foo
    \:
    \\\:
    bar
  :


  %Q;
    foo
    \;
    \\\;
    bar
  ;


  %Q"
    foo
    \"
    \\\"
    bar
  "


  %Q'
    foo
    \'
    \\\'
    bar
  '


  %Q,
    foo
    \,
    \\\,
    bar
  ,


  %Q.
    foo
    \.
    \\\.
    bar
  .


  %Q?
    foo
    \?
    \\\?
    bar
  ?


  %Q/
    foo
    \/
    \\\/
    bar
  /


  %Q{
    foo
    \}
    \\\}
    bar
  }


  %Q<
    foo
    \>
    \\\>
    bar
  >


  %Q[
    foo
    \]
    \\\]
    bar
  ]


  %Q(
    foo
    \)
    \\\)
    bar
  )


  %Q foo\ \\\ bar 

  %W~
    foo
    \~
    \\\~
    bar
  ~


  %W`
    foo
    \`
    \\\`
    bar
  `


  %W!
    foo
    \!
    \\\!
    bar
  !


  %W@
    foo
    \@
    \\\@
    bar
  @


  %W#
    foo
    \#
    \\\#
    bar
  #


  %W$
    foo
    \$
    \\\$
    bar
  $


  %W%
    foo
    \%
    \\\%
    bar
  %


  %W^
    foo
    \^
    \\\^
    bar
  ^


  %W&
    foo
    \&
    \\\&
    bar
  &


  %W*
    foo
    \*
    \\\*
    bar
  *


  %W_
    foo
    \_
    \\\_
    bar
  _


  %W-
    foo
    \-
    \\\-
    bar
  -


  %W+
    foo
    \+
    \\\+
    bar
  +


  %W=
    foo
    \=
    \\\=
    bar
  =


  %W|
    foo
    \|
    \\\|
    bar
  |


  %W:
    foo
    \:
    \\\:
    bar
  :


  %W;
    foo
    \;
    \\\;
    bar
  ;


  %W"
    foo
    \"
    \\\"
    bar
  "


  %W'
    foo
    \'
    \\\'
    bar
  '


  %W,
    foo
    \,
    \\\,
    bar
  ,


  %W.
    foo
    \.
    \\\.
    bar
  .


  %W?
    foo
    \?
    \\\?
    bar
  ?


  %W/
    foo
    \/
    \\\/
    bar
  /


  %W{
    foo
    \}
    \\\}
    bar
  }


  %W<
    foo
    \>
    \\\>
    bar
  >


  %W[
    foo
    \]
    \\\]
    bar
  ]


  %W(
    foo
    \)
    \\\)
    bar
  )


  %x~
    foo
    \~
    \\\~
    bar
  ~


  %x`
    foo
    \`
    \\\`
    bar
  `


  %x!
    foo
    \!
    \\\!
    bar
  !


  %x@
    foo
    \@
    \\\@
    bar
  @


  %x#
    foo
    \#
    \\\#
    bar
  #


  %x$
    foo
    \$
    \\\$
    bar
  $


  %x%
    foo
    \%
    \\\%
    bar
  %


  %x^
    foo
    \^
    \\\^
    bar
  ^


  %x&
    foo
    \&
    \\\&
    bar
  &


  %x*
    foo
    \*
    \\\*
    bar
  *


  %x_
    foo
    \_
    \\\_
    bar
  _


  %x-
    foo
    \-
    \\\-
    bar
  -


  %x+
    foo
    \+
    \\\+
    bar
  +


  %x=
    foo
    \=
    \\\=
    bar
  =


  %x|
    foo
    \|
    \\\|
    bar
  |


  %x:
    foo
    \:
    \\\:
    bar
  :


  %x;
    foo
    \;
    \\\;
    bar
  ;


  %x"
    foo
    \"
    \\\"
    bar
  "


  %x'
    foo
    \'
    \\\'
    bar
  '


  %x,
    foo
    \,
    \\\,
    bar
  ,


  %x.
    foo
    \.
    \\\.
    bar
  .


  %x?
    foo
    \?
    \\\?
    bar
  ?


  %x/
    foo
    \/
    \\\/
    bar
  /


  %x{
    foo
    \}
    \\\}
    bar
  }


  %x<
    foo
    \>
    \\\>
    bar
  >


  %x[
    foo
    \]
    \\\]
    bar
  ]


  %x(
    foo
    \)
    \\\)
    bar
  )


  %x foo\ \\\ bar 

# vim:foldmethod=syntax
